name: build_and_test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_and_test:
    # runs-on: ubuntu-latest
    # Need >= 20.04 for modern sqlite. Can switch to latest when
    # github change
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: Update pip/wheel infrastructure
        shell: bash -l {0}
        run: |
          conda install -y -q pip wheel

      - name: Install sqlite
        shell: bash -l {0}
        run: |
          conda install -y -q sqlite

      - name: Install postgresql (server)
        run: sudo apt install postgresql

      - name: Install postgresql Python packages
        shell: bash -l {0}
        run: |
          conda install -y -q psycopg2
          pip install testing.postgresql

      - name: Install cryptography package for moto
        shell: bash -l {0}
        run: |
          conda install -y -q cryptography

      - name: Install WebDAV packages for testing
        shell: bash -l {0}
        run: |
          pip install cheroot wsgidav

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt

      # We have two cores so we can speed up the testing with xdist
      - name: Install pytest packages
        shell: bash -l {0}
        run: |
          conda install -y -q \
            flake8 \
            pytest pytest-flake8 pytest-xdist pytest-openfiles pytest-cov

      - name: List installed packages
        shell: bash -l {0}
        run: |
          conda list
          pip list -v

      - name: Build and install
        shell: bash -l {0}
        run: |
          pip install -v -e .

      - name: Run tests
        shell: bash -l {0}
        env:
          SQLALCHEMY_WARN_20: 1
        run: |
          pytest -r a -v -n 3 --open-files --cov=lsst.daf.butler --cov=tests --cov-report=xml --cov-report=term --cov-branch
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
